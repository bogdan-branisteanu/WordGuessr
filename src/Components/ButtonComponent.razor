

@switch (@Button.State)
{
   
     case "contained":
     <button class="buttonClass" id=@Button.sId  style="margin-top: 3px; width: @Button.width; height: @Button.height; border-radius: 12px; background-color:rgba(251,196,0, .8);" >
     @Button.Text </button>
     break;

     case "doubleYellow":
     <button class="buttonClass" id=@Button.sId  style="margin-top: 3px; width: @Button.width; height: @Button.height; border-radius: 12px; background: linear-gradient(45deg, #71ddf3 20%, rgb(251 196 0 / 80%) 80%);" >
     @Button.Text </button>
     break;

     case "missing":
     <button class="buttonClass" id=@Button.sId  style="margin-top: 3px; width: @Button.width; height: @Button.height; border-radius: 12px; background-color:rgba(217,75,53, 0.7);" >
     @Button.Text </button>
     break;

     case "correct":
     <button class="buttonClass" id=@Button.sId  style="margin-top: 3px; width: @Button.width; height: @Button.height; border-radius: 12px; background-color:rgba(4,170,109, 1);" >
     @Button.Text </button>
     break;

     default:

     if(@Button.sId == "enter"){
          <button class="enterButton" id=@Button.sId  style="margin-top: 3px; width: @Button.width; height: @Button.height; border-radius: 12px; background-color:@Button.Color" >
          @Button.Text </button>
     
     }else if(@Button.sId == "backspace"){
          <button class="backspaceButton" id=@Button.sId  style="margin-top: 3px; width: @Button.width; height: @Button.height; border-radius: 12px; background-color:@Button.Color" >
          @Button.Text </button>
     
     }else{
          <button class="buttonClass" id=@Button.sId  style="margin-top: 3px; width: @Button.width; height: @Button.height; border-radius: 12px; background-color:@Button.Color" >
          @Button.Text </button>
     }
     break;

}

